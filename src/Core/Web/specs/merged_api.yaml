openapi: 3.0.1
info:
  title: Merged Api
  version: 1.0.0
paths:
  /api/v1/api_keys:
    get:
      tags:
        - ApiKey
      summary: List api key
      operationId: ListApiKeyV1
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiKeyDto'
                description: Api key dto
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiKeyDto'
                description: Api key dto
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiKeyDto'
                description: Api key dto
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: [ ]
    post:
      tags:
        - ApiKey
      summary: Create api key
      operationId: CreateApiKeyV1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreateRequestBody'
          text/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreateRequestBody'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreateRequestBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeySecretDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeySecretDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeySecretDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: [ ]
  '/api/v1/api_keys/{id}':
    get:
      tags:
        - ApiKey
      summary: Get api key
      operationId: GetApiKeyV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: Id
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: [ ]
    put:
      tags:
        - ApiKey
      summary: Update api key
      operationId: UpdateApiKeyV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: Id
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyUpdateRequestBody'
          text/json:
            schema:
              $ref: '#/components/schemas/ApiKeyUpdateRequestBody'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApiKeyUpdateRequestBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: [ ]
    delete:
      tags:
        - ApiKey
      summary: Delete api key
      operationId: DeleteApiKeyV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: Id
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SuccessfulResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SuccessfulResult'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: [ ]
  '/api/v1/api_keys/{id}/secret':
    get:
      tags:
        - ApiKey
      summary: Get api key secret
      operationId: GetApiKeySecretV1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            description: Id
            format: uuid
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiKeySecretDto'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeySecretDto'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiKeySecretDto'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: [ ]
  /api/v1/info:
    get:
      tags:
        - Info
      summary: Get info
      operationId: GetInfoV1
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InfoResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/InfoResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
  /api/v1/users/current_user:
    get:
      tags:
        - User
      summary: Get current user
      operationId: GetCurrentUserV1
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CurrentUser'
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
            text/json:
              schema:
                $ref: '#/components/schemas/CurrentUser'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: [ ]
  /api/v1/users/email/send_code:
    post:
      tags:
        - User
      summary: Send user email code
      operationId: SendUserEmailCodeV1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEmailCodeSendRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UserEmailCodeSendRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserEmailCodeSendRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SuccessfulResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SuccessfulResult'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: [ ]
  /api/v1/users/email/verify_code:
    put:
      tags:
        - User
      summary: Verify user email code
      operationId: VerifyUserEmailCodeV1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEmailCodeVerifyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UserEmailCodeVerifyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserEmailCodeVerifyRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SuccessfulResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SuccessfulResult'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Bearer: [ ]
components:
  schemas:
    ApiKeyCreateRequestBody:
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: Name
          nullable: true
      additionalProperties: false
      description: Api key create request body
    ApiKeyDto:
      type: object
      properties:
        id:
          type: string
          description: Id
          format: uuid
        userId:
          type: string
          description: User id
          format: uuid
        user:
          $ref: '#/components/schemas/UserShortInfo'
        name:
          type: string
          description: Name
          nullable: true
        createdAt:
          type: string
          description: Created at
          example: '2022-11-15T12:00:00.0000000Z'
      additionalProperties: false
      description: Api key dto
    ApiKeySecretDto:
      type: object
      properties:
        id:
          type: string
          description: Id
          format: uuid
        userId:
          type: string
          description: User id
          format: uuid
        user:
          $ref: '#/components/schemas/UserShortInfo'
        name:
          type: string
          description: Name
          nullable: true
        createdAt:
          type: string
          description: Created at
          example: '2022-11-15T12:00:00.0000000Z'
        secret:
          type: string
          description: Secret
          nullable: true
      additionalProperties: false
      description: Api key secret dto
    ApiKeyUpdateRequestBody:
      type: object
      properties:
        name:
          maxLength: 255
          type: string
          description: Name
          nullable: true
      additionalProperties: false
      description: Api key update request body
    CurrentUser:
      type: object
      properties:
        id:
          type: string
          description: Id of user
          format: uuid
        email:
          type: string
          description: Email of user
          nullable: true
          example: example@email.com
        emailVerified:
          type: boolean
          description: Email Verified
        phone:
          type: string
          description: Phone of user
          nullable: true
        phoneVerified:
          type: boolean
          description: Phone Verified
        firstName:
          type: string
          description: First Name of user
          nullable: true
          example: John
        lastName:
          type: string
          description: Last Name of user
          nullable: true
          example: Doe
        role:
          $ref: '#/components/schemas/Role'
      additionalProperties: false
      description: Current user
    ErrorResult:
      type: object
      properties:
        message:
          type: string
          description: Message
          nullable: true
        traceId:
          type: string
          description: Trace id
          nullable: true
      additionalProperties: false
      description: Error result
    InfoResponse:
      type: object
      properties:
        buildDate:
          type: string
          description: Build date
          nullable: true
          example: '2022-11-15T12:00:00.0000000Z'
      additionalProperties: false
      description: Info response
    Role:
      enum:
        - Guest
        - Admin
        - Client
      type: string
      description: Role
    SuccessfulResult:
      type: object
      properties:
        message:
          type: string
          description: Message
          nullable: true
      additionalProperties: false
      description: Successful result
    UserEmailCodeSendRequest:
      required:
        - email
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: Email
          format: email
          example: example@email.com
      additionalProperties: false
      description: User email code send request
    UserEmailCodeVerifyRequest:
      required:
        - code
        - email
      type: object
      properties:
        email:
          maxLength: 255
          minLength: 1
          type: string
          description: Email
          format: email
          example: example@email.com
        code:
          type: integer
          description: Code
          format: int32
          example: 124567
      additionalProperties: false
      description: User email code verify request
    UserShortInfo:
      type: object
      properties:
        id:
          type: string
          description: Id of user
          format: uuid
        email:
          type: string
          description: Email of user
          nullable: true
      additionalProperties: false
      description: User short info
  securitySchemes:
    Bearer:
      type: http
      description: Specify the authorization token.
      scheme: Bearer
      bearerFormat: JWT
    ApiKey:
      type: apiKey
      description: Specify the api key.
      name: X-Api-Key
      in: header